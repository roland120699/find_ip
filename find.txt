import requests
import json
import os
from requests.exceptions import  RequestException



def get_location_adress(api_key, ip_adress):
    url = f"https://api.ipgeolocation.io/ipgeo?apiKey={api_key}&ip={ip_address}"

    try:
        responce = requests.get(url)
        data = responce.json()
        return data
    except Exception as e:
        return f"Error: {e}"

def get_location_info(api_key, ip_address):
    try:
        url = f'https://api.ipgeolocation.io/ipgeo?apiKey={api_key}&ip={ip_address}'
        response = requests.get(url)
        response.raise_for_status()
        return response.json()
    except RequestException as e:
        return {'error': {'info': str(e)}}

def process_ip_list(api_key, input_file, output_file, error_log, info_log):
    try:
        with open(input_file, 'r') as file, open(output_file, 'w', encoding='utf-8') as out_file, open(error_log, 'w') as err_log, open(info_log, 'w') as inf_log:
            out_file.write("IP\tCountry\tRegion\tCity\tZip\tLat\tLon\tAccept\n")

            for line in file:
                ip_data = line.strip().split(' ')
                ip_address = ip_data[0]

                locations = []

                for _ in range(3):
                    location_info = get_location_info(api_key, ip_address)
                    if isinstance(location_info, dict):
                        locations.append(location_info)

                num_requests = len(locations)
                num_errors = sum(1 for loc in locations if 'error' in loc)
                num_successful = num_requests - num_errors

                inf_log.write(f'По адресу {ip_address} запрошено {num_requests} сервисов, совпало {num_successful} ответов, {num_errors} не ответило\n')

                if num_successful > 0:
                    
                    location = next(loc for loc in locations if 'error' not in loc)
                    lat, lon = location.get('latitude', ''), location.get('longitude', '')
                else:

                    location = {'country': '', 'region': '', 'city': '', 'zip': '', 'latitude': '', 'longitude': ''}
                    lat, lon = '', ''


                accept_data = f"{num_successful}/{num_requests}" if num_requests > 0 else '0/0'
                out_file.write(f"{ip_address}\t{location.get('country', '')}\t{location.get('region', '')}\t{location.get('city', '')}\t{location.get('zip', '')}\t{lat}\t{lon}\t{accept_data}\n")

                for loc in locations:
                    if 'error' in loc:
                        err_log.write(f"Error for IP {ip_address}: {loc['error']['info']}\n")

    except Exception as e:
        print(f'Error: {e}')


if __name__ == "__main__":
    api_key = "e853e91a2d6a4117b3daff2388504625"
    input_file = r"C:\Users\rolan\Desktop\Проект 2\my_ip_list.txt"
    output_file = "output_results.txt"
    error_log = "error.log"
    info_log = "info.log"

    process_ip_list(api_key, input_file, output_file, error_log, info_log)
















